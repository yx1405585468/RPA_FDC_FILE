{"nodeType":[{"description":"kafka输入","functionDesc":"功能描述:\r\n- kafka 根据配置创建链接，每次读取指定时间范围内(固定5s、最大读取量10w) 数据之后，根据column_types进行类型转换，得到对应的数据，\r\n最终变换成DataFrame, 可以供给后置的算法进行使用， 读取方式参考 kafka_poll_type 参数\r\n\r\n输入端口:\r\n- 无\r\n\r\n输出端口:\r\n- 1个数据集\r\n\r\n参数:\r\n- kafka地址\r\n- kafka订阅的主题\r\n- 读取位置方式：1=最早偏移（earliest-offsets） 2=最晚偏移（latest-offsets） 3=指定分区偏移（specific-offsets） 4=时间戳（timstamp）\r\n- 分区id：当 read_type = 3 or 4 指定分区类型\r\n- 分区偏移量： 当 read_type = 3 指定分区类型\r\n- 时间字符串：当 read_type = 4 时间戳\r\n- 拉取方式：1：拉取一次返回，拉取不到，返回无法获取数据异常，2：循环拉取，直至拉取到数据返回\r\n- 连接kafka超时时间：单位毫秒\r\n- 列需要转换的类型：json数组字符串, 列需要转换的类型\r\n  如果是时间类型，pattern 不为空， 范例如下：\r\n  [{\r\n  \"columnName\": \"paramType\",\r\n  \"pattern\": \"\",\r\n  \"type\": \"string\"\r\n  }, {\r\n  \"columnName\": \"paramName\",\r\n  \"pattern\": \"\",\r\n  \"type\": \"string\"\r\n  }, {\r\n  \"columnName\": \"paramIndex\",\r\n  \"pattern\": \"\",\r\n  \"type\": \"int\"\r\n  }, {\r\n  \"columnName\": \"paramValue\",\r\n  \"pattern\": \"\",\r\n  \"type\": \"string\"\r\n  }\r\n  ]","id":"25","typeName":"kafka_input"},{"description":"kafka输出","functionDesc":"功能描述:\r\n- 一般作为作为流程最后一个组件，当建模流程或者发布流程计算完毕之后， 推送到kafka，然后整个流程完结\r\n\r\n输入端口:\r\n- 1个数据集\r\n\r\n输出端口:\r\n- 无\r\n\r\n参数:\r\n- kafka地址\r\n- kafka订阅的主题\r\n- 列需要转换的类型：json数组字符串, 列需要转换的类型\r\n  如果是时间类型，pattern 不为空， 范例如下：\r\n  [{\r\n  \"columnName\": \"paramType\",\r\n  \"pattern\": \"\",\r\n  \"type\": \"string\"\r\n  }, {\r\n  \"columnName\": \"paramName\",\r\n  \"pattern\": \"\",\r\n  \"type\": \"string\"\r\n  }, {\r\n  \"columnName\": \"paramIndex\",\r\n  \"pattern\": \"\",\r\n  \"type\": \"int\"\r\n  }, {\r\n  \"columnName\": \"paramValue\",\r\n  \"pattern\": \"\",\r\n  \"type\": \"string\"\r\n  }\r\n  ]","id":"26","typeName":"kafka_out"},{"description":"python扩展编程","functionDesc":"功能描述:\r\n- 该组件支持写入python 代码， 实现自定义的数据处理功能，或者创建模型， 模型预测， 评估等自由度较高的自定义功能\r\n\r\n输入端口:\r\n- 多个数据集\r\n- 多个模型\r\n\r\n输出端口:\r\n- 多个数据集\r\n- 多个模型\r\n\r\n参数:\r\n - 输入节点新增参数(选择数据或模型)\r\n - 输出节点新增参数(选择数据或模型)\r\n - 新增代码参数\r\n\r\n备注\r\n - 输入参数：模型 + 数据集数量最多5个\r\n - 输出参数：模型 + 数据集数量最多5个","id":"27","typeName":"python_extension_program"}],"params":[],"content":"{\"nodes\":[{\"position\":{\"x\":-150,\"y\":-60},\"shape\":\"custom\",\"id\":\"7fe5aa03-3875-43bd-b7f6-21adda4b3362\",\"icon\":\"python_extension_program\",\"zIndex\":2,\"data\":{\"nodeTypeCh\":\"python编程\",\"nodeTypeId\":27,\"nodeTypeName\":\"python_extension_program\",\"name\":\"数据处理与建模\",\"description\":\"\",\"config\":[{\"paramName\":\"output_params\",\"paramIndex\":1,\"paramValue\":\"df1\",\"paramType\":\"string\"},{\"paramName\":\"script_str\",\"paramIndex\":2,\"paramValue\":\"\",\"paramType\":\"string\"},{\"paramName\":\"params\",\"paramIndex\":3,\"paramValue\":\"{}\",\"paramType\":\"string\"},{\"paramName\":\"model_path_dir\",\"paramIndex\":4,\"paramValue\":\"hdfs://namespace01/data/${tenantId}/${appId}/model\",\"paramType\":\"string\"}],\"input\":[{\"label\":\"input_D1\",\"value\":\"input_D1\",\"type\":\"data\",\"key\":\"1fcbff27-9b37-454e-9cd7-9747b089d700\",\"index\":1}],\"output\":[{\"label\":\"output_D1\",\"value\":\"output_D1\",\"type\":\"data\",\"key\":\"6b91b054-1e6d-4302-a829-3aa538cdb9e9\",\"index\":1}],\"cache\":1,\"autoMatch\":1,\"portsParams\":{\"in\":[{\"key\":\"1fcbff27-9b37-454e-9cd7-9747b089d700\",\"value\":\"input_D1\",\"type\":\"data\"}],\"out\":[{\"key\":\"6b91b054-1e6d-4302-a829-3aa538cdb9e9\",\"value\":\"output_D1\",\"type\":\"data\"}]},\"status\":4,\"setting\":true,\"input_D1\":\"INPUT_D1\",\"output_D1\":\"OUTPUT_D1\"},\"ports\":{\"groups\":{\"left\":{\"position\":\"left\",\"attrs\":{\"circle\":{\"r\":10,\"magnet\":true,\"strokeWidth\":2,\"stroke\":\"#ffffff\",\"fill\":\"#707693\",\"filter\":{\"name\":\"dropShadow\",\"args\":{\"dx\":0,\"dy\":0,\"opacity\":0.5,\"color\":\"#bec0d5\"}}},\"text\":{\"text\":\"\",\"fill\":\"#FFFFFF\",\"fontSize\":10,\"pointer-events\":\"none\"}}},\"right\":{\"position\":\"right\",\"attrs\":{\"circle\":{\"r\":10,\"magnet\":true,\"strokeWidth\":2,\"stroke\":\"#ffffff\",\"fill\":\"#707693\",\"filter\":{\"name\":\"dropShadow\",\"args\":{\"dx\":0,\"dy\":0,\"opacity\":0.5,\"color\":\"#bec0d5\"}}},\"text\":{\"text\":\"\",\"fill\":\"#FFFFFF\",\"fontSize\":10,\"pointer-events\":\"none\"}}}},\"items\":[{\"id\":\"1fcbff27-9b37-454e-9cd7-9747b089d700\",\"group\":\"left\",\"attrs\":{\"circle\":{\"r\":10},\"text\":{\"text\":\"D\",\"x\":19,\"y\":6,\"fontSize\":10}}},{\"id\":\"6b91b054-1e6d-4302-a829-3aa538cdb9e9\",\"group\":\"right\",\"attrs\":{\"circle\":{\"r\":10},\"text\":{\"text\":\"D\",\"x\":19,\"y\":6,\"fontSize\":10}}}]}},{\"position\":{\"x\":-375,\"y\":-60},\"shape\":\"custom\",\"id\":\"a464306d-bf43-4c8b-8bfa-e3e6ebdc4b23\",\"icon\":\"kafka输入\",\"zIndex\":3,\"data\":{\"nodeTypeCh\":\"kafka输入\",\"nodeTypeId\":25,\"nodeTypeName\":\"kafka_input\",\"name\":\"kafka输入\",\"description\":\"\",\"config\":[{\"paramName\":\"kafka_host\",\"paramIndex\":1,\"paramValue\":\"10.52.199.81:9092\",\"paramType\":\"string\"},{\"paramName\":\"kafka_topic\",\"paramIndex\":2,\"paramValue\":\"mva_query_topic\",\"paramType\":\"string\"},{\"paramName\":\"kafka_group\",\"paramIndex\":3,\"paramValue\":\"asdc\",\"paramType\":\"string\"},{\"paramName\":\"read_type\",\"paramIndex\":4,\"paramValue\":2,\"paramType\":\"int\"},{\"paramName\":\"partion_number\",\"paramIndex\":5,\"paramValue\":\"\",\"paramType\":\"int\"},{\"paramName\":\"partion_offset\",\"paramIndex\":6,\"paramValue\":\"\",\"paramType\":\"int\"},{\"paramName\":\"timestamp_offset\",\"paramIndex\":7,\"paramValue\":\"\",\"paramType\":\"string\"},{\"paramName\":\"kafka_poll_type\",\"paramIndex\":8,\"paramValue\":\"1\",\"paramType\":\"int\"},{\"paramName\":\"kafka_connect_timeout\",\"paramIndex\":9,\"paramValue\":100000,\"paramType\":\"string\"},{\"paramName\":\"column_types\",\"paramIndex\":10,\"paramValue\":\"[{\\\"columnName\\\":\\\"requestId\\\",\\\"pattern\\\":\\\"\\\",\\\"type\\\":\\\"string\\\",\\\"_X_ROW_KEY\\\":\\\"row_42\\\"},{\\\"columnName\\\":\\\"requestParam\\\",\\\"pattern\\\":\\\"\\\",\\\"type\\\":\\\"string\\\",\\\"_X_ROW_KEY\\\":\\\"row_43\\\"}]\",\"paramType\":\"string\"},{\"paramName\":\"data_mode\",\"paramIndex\":11,\"paramValue\":\"2\",\"paramType\":\"int\"}],\"input\":[],\"output\":[{\"label\":\"output\",\"value\":\"output\",\"type\":\"data\"}],\"cache\":1,\"status\":4,\"setting\":true},\"ports\":{\"groups\":{\"left\":{\"position\":\"left\",\"attrs\":{\"circle\":{\"r\":10,\"magnet\":true,\"strokeWidth\":2,\"stroke\":\"#ffffff\",\"fill\":\"#707693\",\"filter\":{\"name\":\"dropShadow\",\"args\":{\"dx\":0,\"dy\":0,\"opacity\":0.5,\"color\":\"#bec0d5\"}}},\"text\":{\"text\":\"\",\"fill\":\"#FFFFFF\",\"fontSize\":10,\"pointer-events\":\"none\"}}},\"right\":{\"position\":\"right\",\"attrs\":{\"circle\":{\"r\":10,\"magnet\":true,\"strokeWidth\":2,\"stroke\":\"#ffffff\",\"fill\":\"#707693\",\"filter\":{\"name\":\"dropShadow\",\"args\":{\"dx\":0,\"dy\":0,\"opacity\":0.5,\"color\":\"#bec0d5\"}}},\"text\":{\"text\":\"\",\"fill\":\"#FFFFFF\",\"fontSize\":10,\"pointer-events\":\"none\"}}}},\"items\":[{\"id\":\"ports-data-1\",\"group\":\"right\",\"attrs\":{\"circle\":{\"r\":10},\"text\":{\"text\":\"D\",\"x\":19,\"y\":6,\"fontSize\":10}}}]}},{\"position\":{\"x\":60,\"y\":-60},\"shape\":\"custom\",\"id\":\"7479efe4-fa74-4f2e-8cef-87eab92f2823\",\"icon\":\"kafka输出\",\"zIndex\":4,\"data\":{\"nodeTypeCh\":\"kafka输出\",\"nodeTypeId\":26,\"nodeTypeName\":\"kafka_out\",\"name\":\"kafka输出\",\"description\":\"\",\"config\":[{\"paramName\":\"kafka_host\",\"paramIndex\":1,\"paramValue\":\"10.52.199.81:9092\",\"paramType\":\"string\"},{\"paramName\":\"kafka_topic\",\"paramIndex\":2,\"paramValue\":\"mva_flow_topic\",\"paramType\":\"string\"},{\"paramName\":\"column_types\",\"paramIndex\":3,\"paramValue\":\"[{\\\"type\\\":\\\"bigint\\\",\\\"columnName\\\":\\\"code\\\",\\\"_X_ROW_KEY\\\":\\\"row_88\\\"},{\\\"type\\\":\\\"string\\\",\\\"columnName\\\":\\\"msg\\\",\\\"_X_ROW_KEY\\\":\\\"row_89\\\"},{\\\"type\\\":\\\"string\\\",\\\"columnName\\\":\\\"requestId\\\",\\\"_X_ROW_KEY\\\":\\\"row_90\\\"}]\",\"paramType\":\"string\"}],\"input\":[{\"label\":\"input\",\"value\":\"input\",\"type\":\"data\"}],\"output\":[],\"cache\":0,\"status\":4,\"setting\":true},\"ports\":{\"groups\":{\"left\":{\"position\":\"left\",\"attrs\":{\"circle\":{\"r\":10,\"magnet\":true,\"strokeWidth\":2,\"stroke\":\"#ffffff\",\"fill\":\"#707693\",\"filter\":{\"name\":\"dropShadow\",\"args\":{\"dx\":0,\"dy\":0,\"opacity\":0.5,\"color\":\"#bec0d5\"}}},\"text\":{\"text\":\"\",\"fill\":\"#FFFFFF\",\"fontSize\":10,\"pointer-events\":\"none\"}}},\"right\":{\"position\":\"right\",\"attrs\":{\"circle\":{\"r\":10,\"magnet\":true,\"strokeWidth\":2,\"stroke\":\"#ffffff\",\"fill\":\"#707693\",\"filter\":{\"name\":\"dropShadow\",\"args\":{\"dx\":0,\"dy\":0,\"opacity\":0.5,\"color\":\"#bec0d5\"}}},\"text\":{\"text\":\"\",\"fill\":\"#FFFFFF\",\"fontSize\":10,\"pointer-events\":\"none\"}}}},\"items\":[{\"id\":\"ports-data-1\",\"group\":\"left\",\"attrs\":{\"circle\":{\"r\":10},\"text\":{\"text\":\"D\",\"x\":19,\"y\":6,\"fontSize\":10}}}]}}],\"edges\":[{\"shape\":\"edge\",\"id\":\"e91577b0-d43d-494b-bed9-0dd43ba4f4c6\",\"zIndex\":-1,\"source\":{\"cell\":\"a464306d-bf43-4c8b-8bfa-e3e6ebdc4b23\",\"port\":\"ports-data-1\"},\"target\":{\"cell\":\"7fe5aa03-3875-43bd-b7f6-21adda4b3362\",\"port\":\"1fcbff27-9b37-454e-9cd7-9747b089d700\"},\"data\":{\"source\":\"output\",\"target\":\"input_D1\",\"autoMatch\":1}},{\"shape\":\"edge\",\"id\":\"abd6e28f-966a-42a7-832d-1d90f3b2520f\",\"zIndex\":-1,\"source\":{\"cell\":\"7fe5aa03-3875-43bd-b7f6-21adda4b3362\",\"port\":\"6b91b054-1e6d-4302-a829-3aa538cdb9e9\"},\"target\":{\"cell\":\"7479efe4-fa74-4f2e-8cef-87eab92f2823\",\"port\":\"ports-data-1\"},\"data\":{\"source\":\"output_D1\",\"target\":\"input\"}}]}"}